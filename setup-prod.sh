#!/bin/bash

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è docker-compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–∫—Ä–∏–ø—Ç–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø—É—Å–∫ Docker (–Ω–µ –æ—Ç sudo)
docker info &> /dev/null
if [ $? -ne 0 ]; then
    echo "‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Docker. –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ sudo."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è git –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
if command -v git &> /dev/null; then
    echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥–∞ –∏–∑ git..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if git rev-parse --is-inside-work-tree &> /dev/null; then
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
        CURRENT_BRANCH=$(git branch --show-current)
        echo "üìå –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
        git fetch
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —É–¥–∞–ª–µ–Ω–Ω–æ–π –≤–µ—Ç–∫–æ–π
        if [ $(git rev-list HEAD...origin/$CURRENT_BRANCH --count) -ne 0 ]; then
            echo "üîî –î–æ—Å—Ç—É–ø–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è."
            read -p "–•–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å git pull –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π? (y/n): " do_pull
            
            if [[ "$do_pull" == "y" || "$do_pull" == "Y" ]]; then
                echo "üì• –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
                git pull
                
                if [ $? -ne 0 ]; then
                    echo "‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π."
                    exit 1
                fi
                
                echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã."
            else
                echo "‚è© –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ git."
            fi
        else
            echo "‚úÖ –í–∞—à –∫–æ–¥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏."
        fi
    else
        echo "‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."
    fi
else
    echo "‚ö†Ô∏è Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
create_mongodb_backup() {
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MongoDB..."
    BACKUP_DIR="./backups"
    mkdir -p "$BACKUP_DIR"
    BACKUP_FILE="$BACKUP_DIR/dcpoker_mongodb_backup_$(date +%Y%m%d_%H%M%S).tar"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ MongoDB
    if [ $(docker ps -q -f name=dcpoker-mongodb | wc -l) -eq 1 ]; then
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–æ–º–∞ MongoDB
        docker run --rm --volumes-from dcpoker-mongodb -v $(pwd)/backups:/backup \
            ubuntu tar cvf /backup/dcpoker_mongodb_backup_$(date +%Y%m%d_%H%M%S).tar /data/db
        
        if [ $? -eq 0 ]; then
            echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ: $BACKUP_FILE"
        else
            echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –±—ç–∫–∞–ø–∞."
        fi
    else
        echo "‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä MongoDB –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏."
    fi
}

# –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
if [ "$(docker ps -q -f name=dcpoker-mongodb)" ]; then
    read -p "–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º? (y/n): " create_backup
    if [[ "$create_backup" == "y" || "$create_backup" == "Y" ]]; then
        create_mongodb_backup
    else
        echo "‚è© –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏."
    fi
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
echo "üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if [ "$(docker ps -aq -f name=dcpoker)" ]; then
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose -f docker-compose.prod.yml down
fi

# –û–ø—Ü–∏—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ —Å –Ω—É–ª—è
read -p "–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑—ã? (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –∏–ª–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞) (y/n): " rebuild
if [[ "$rebuild" == "y" || "$rebuild" == "Y" ]]; then
    echo "üî® –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã –∏ —Å–æ–±–∏—Ä–∞–µ–º –∑–∞–Ω–æ–≤–æ..."
    docker-compose -f docker-compose.prod.yml build --no-cache
else
    echo "‚è© –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–∑—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å."
fi

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω-—Ä–µ–∂–∏–º–µ
echo "üî® –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.prod.yml up -d --build

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker ps -a | grep dcpoker

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º
echo "üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"

check_container() {
    local container_name=$1
    local container_status=$(docker inspect -f '{{.State.Status}}' $container_name 2>/dev/null)
    local exit_code=$(docker inspect -f '{{.State.ExitCode}}' $container_name 2>/dev/null)
    
    if [ -z "$container_status" ]; then
        echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    elif [ "$container_status" == "running" ]; then
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        return 0
    else
        echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name –Ω–µ –∑–∞–ø—É—â–µ–Ω (—Å—Ç–∞—Ç—É—Å: $container_status, –∫–æ–¥ –≤—ã—Ö–æ–¥–∞: $exit_code)"
        return 1
    fi
}

container_errors=0

check_container "dcpoker-client" || ((container_errors++))
check_container "dcpoker-server" || ((container_errors++))
check_container "dcpoker-mongodb" || ((container_errors++))

if [ $container_errors -gt 0 ]; then
    echo ""
    echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $container_errors –Ω–µ–∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    
    echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏):"
    docker logs dcpoker-server --tail 20 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    
    echo ""
    echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏):"
    docker logs dcpoker-client --tail 10 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    
    exit 1
fi

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
check_http_availability() {
    local container_name=$1
    local port=$2
    
    if ! docker ps -q -f name=$container_name | grep -q .; then
        echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $container_name –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∫–∞ HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ HTTP-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –Ω—É–∂–Ω–æ–º –ø–æ—Ä—Ç—É
    echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –≤ $container_name (–ø–æ—Ä—Ç $port)..."
    local http_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:$port 2>/dev/null || echo "000")
    
    if [ "$http_status" == "000" ]; then
        echo "‚ùå –í–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ $container_name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞)"
        return 1
    elif [ "$http_status" -ge 200 ] && [ "$http_status" -lt 400 ]; then
        echo "‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ $container_name –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: $http_status)"
        return 0
    else
        echo "‚ö†Ô∏è –í–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ $container_name –æ—Ç–≤–µ—á–∞–µ—Ç —Å –æ—à–∏–±–∫–æ–π (—Å—Ç–∞—Ç—É—Å: $http_status)"
        return 1
    fi
}

if [ $container_errors -eq 0 ]; then
    echo ""
    echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
    check_http_availability "dcpoker-client" 80
    
    echo ""
    echo "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ."
fi

echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!"
echo "‚úÖ MongoDB –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–º —Ç–æ–º–µ dcpoker_mongodb_data"
echo "‚úÖ –ö–ª–∏–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 80"
echo "‚úÖ –°–µ—Ä–≤–µ—Ä API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001"
echo ""
echo "üìù –õ–æ–≥–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–∞–º–∏:"
echo "docker logs dcpoker-client"
echo "docker logs dcpoker-server"
echo "docker logs dcpoker-mongodb" 